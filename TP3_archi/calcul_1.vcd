$date
  Sat Dec  4 00:09:53 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module calcul_1 $end
$var reg 1 ! rst $end
$var reg 1 " clk $end
$var reg 1 # init $end
$var reg 2 $ op_in[1:0] $end
$var reg 3 % reg0_in[2:0] $end
$var reg 3 & reg1_in[2:0] $end
$var reg 8 ' instr[7:0] $end
$scope module proc $end
$var reg 8 ( instr[7:0] $end
$var reg 1 ) init $end
$var reg 1 * rst $end
$var reg 1 + clk $end
$var reg 1 , wr_bank_out $end
$var reg 1 - wr_instr_out $end
$var reg 8 . r_out_reg[7:0] $end
$scope module se $end
$var reg 1 / init $end
$var reg 1 0 clk $end
$var reg 1 1 wr_instr $end
$var reg 1 2 wr_bank $end
$var reg 1 3 b_out_1 $end
$var reg 1 4 b_out_2 $end
$scope module baun $end
$var reg 1 5 e $end
$var reg 1 6 clk $end
$var reg 1 7 rst $end
$var reg 1 8 set $end
$var reg 1 9 s $end
$upscope $end
$scope module badeux $end
$var reg 1 : e $end
$var reg 1 ; clk $end
$var reg 1 < rst $end
$var reg 1 = set $end
$var reg 1 > s $end
$upscope $end
$upscope $end
$scope module re $end
$var reg 8 ? r_in[7:0] $end
$var reg 1 @ wr $end
$var reg 1 A rst $end
$var reg 1 B clk $end
$var reg 8 C r_out[7:0] $end
$upscope $end
$scope module pr $end
$var reg 2 D op[1:0] $end
$var reg 3 E reg_0_id[2:0] $end
$var reg 3 F reg_1_id[2:0] $end
$var reg 1 G rst $end
$var reg 1 H clk $end
$var reg 1 I wr_bank $end
$var reg 8 J mux_out[7:0] $end
$var reg 8 K alu_out[7:0] $end
$var reg 8 L bank_out_0[7:0] $end
$var reg 8 M bank_out_1[7:0] $end
$var reg 8 N mux_in_5_3[7:0] $end
$var reg 1 O op_out_and $end
$scope module mu $end
$var reg 8 P e0[7:0] $end
$var reg 8 Q e1[7:0] $end
$var reg 1 R c $end
$var reg 8 S o[7:0] $end
$upscope $end
$scope module al $end
$var reg 8 T r_e0[7:0] $end
$var reg 8 U r_e1[7:0] $end
$var reg 2 V op[1:0] $end
$var reg 8 W r_s[7:0] $end
$upscope $end
$scope module ba $end
$var reg 3 X reg_0_id[2:0] $end
$var reg 3 Y reg_1_id[2:0] $end
$var reg 8 Z reg_write_val[7:0] $end
$var reg 1 [ wr $end
$var reg 1 \ clk $end
$var reg 1 ] rst $end
$var reg 8 ^ reg_0_val[7:0] $end
$var reg 8 _ reg_1_val[7:0] $end
$comment regs is not handled $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
bUU $
bUUU %
bUUU &
bUUUUUUUU '
bUUUUUUUU (
0)
0*
0+
U,
U-
bUUUUUUUU .
0/
00
U1
U2
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
bUUUUUUUU ?
U@
1A
0B
bUUUUUUUU C
bUU D
bUUU E
bUUU F
0G
0H
UI
bUUUUUUUU J
bUUUUUUUU K
bUUUUUUUU L
bUUUUUUUU M
b00000UUU N
UO
bUUUUUUUU P
b00000UUU Q
UR
bUUUUUUUU S
bUUUUUUUU T
bUUUUUUUU U
bUU V
bUUUUUUUU W
bUUU X
bUUU Y
bUUUUUUUU Z
U[
0\
0]
bUUUUUUUU ^
bUUUUUUUU _
#5000000
1!
1#
b11 $
b000 %
b011 &
b11000011 '
b11000011 (
1)
1*
1/
17
18
1<
1=
b11000011 ?
1G
1]
#10000000
1"
1+
10
16
1;
1B
1H
1\
#15000000
0"
0+
00
06
0;
0B
0H
0\
#20000000
1"
1+
10
16
1;
1B
1H
1\
#25000000
0"
0+
00
06
0;
0B
0H
0\
#30000000
b001 %
b010 &
b11001010 '
b11001010 (
b11001010 ?
#35000000
1"
1+
10
16
1;
1B
1H
1\
#40000000
0"
0+
00
06
0;
0B
0H
0\
#45000000
1"
1+
10
16
1;
1B
1H
1\
#50000000
0"
0+
00
06
0;
0B
0H
0\
#55000000
b00 $
b000 %
b001 &
b00000001 '
b00000001 (
b00000001 ?
#60000000
1"
1+
10
16
1;
1B
1H
1\
#65000000
0"
0+
00
06
0;
0B
0H
0\
#70000000
1"
1+
10
16
1;
1B
1H
1\
#75000000
0"
0+
00
06
0;
0B
0H
0\
#80000000
1"
1+
10
16
1;
1B
1H
1\
#85000000
0"
0+
00
06
0;
0B
0H
0\
#90000000
